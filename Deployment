Suppose you have deployed your application using a deployment controller. Assume the initial number of replicas is one. Write the steps needed to update a container's image using deployment, making sure that there is zero downtime.

Answer:

To update a container's image in a Kubernetes deployment with zero downtime, you can follow these steps:

1.Prepare the New Image: Ensure that the new image you want to deploy is available in your container registry.
2. Update the Deployment: Use the kubectl command to update the image of the deployment. Kubernetes will handle rolling updates for you, ensuring zero downtime.
  -- kubectl set image deployment/<deployment-name> <container-name>=<new-image>:<tag>
3.Verify the Update: Check the status of the deployment to ensure that the update is progressing as expected. This command will provide information about the rollout status and will indicate when the update is complete.
  -- kubectl rollout status deployment/<deployment-name>
4.Monitor the Rollout: You can also use the following command to monitor the rollout. This will show you the status of the pods in real-time, allowing you to see new pods being created and old pods being terminated.
  -- kubectl get pods -w
5. Rollback if Needed: If something goes wrong with the new deployment, you can rollback to the previous version.
  -- kubectl rollout undo deployment/<deployment-name>

